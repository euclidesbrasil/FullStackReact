services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:8080"
      - "5001:443"
    depends_on:
      - sqlserver 
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=desafio_sqlserver,1433;Initial Catalog=ARQ_FULLSTACK;User ID=sa;Password=Admin@123;TrustServerCertificate=True
      - MongoDbSettings__ConnectionString=mongodb://desafio_mongodb:27017
      - MongoDbSettings__DatabaseName=desafio
      - RabbitMQSettings__HostName=desafio_rabbitmq
      - DOTNET_SYSTEM_NET_HTTP_SOCKETSHTTPHANDLER_HTTP2UNENCRYPTEDSUPPORT=true
      - DOTNET_CLI_TELEMETRY_OPTOUT=1
  
  worker:
    build:
      context: .
      dockerfile: Dockerfile.Worker
    restart: always
    environment:
      - MongoDbSettings__ConnectionString=mongodb://desafio_mongodb:27017
      - MongoDbSettings__DatabaseName=desafio
      - RabbitMQSettings__HostName=desafio_rabbitmq

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: desafio_rabbitmq
    hostname: desafio_rabbitmq
    ports:
      - "5673:5672"
      - "15673:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

  sqlserver:
    image: "mcr.microsoft.com/mssql/server:2022-latest"
    container_name: desafio_sqlserver
    hostname: desafio_sqlserver
    ports:
      - "1433:1433"
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_PID=Express
      - SA_PASSWORD=Admin@123
      - MSSQL_SA_PASSWORD=Admin@123
      - MSSQL_USER=sa
    volumes:
      - sqlserver_data:/var/opt/mssql

  mongodb:
    image: "mongo:6"
    container_name: desafio_mongodb
    hostname: desafio_mongodb
    ports:
      - "27018:27017"
    volumes:
      - mongo_data:/data/db

volumes:
  sqlserver_data:
  mongo_data:
